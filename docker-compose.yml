version: '3.8'

services:

  auction-db:
    image: postgres
    container_name: auction-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auctiondb
    volumes:
      - auction-db-data:/var/lib/postgres/data

  bid-db:
    image: postgres
    container_name: bid-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: biddb
    volumes:
      - bid-db-data:/var/lib/postgres/data

  notification-db:
    image: postgres
    container_name: notification-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: notificationdb
    volumes:
      - notification-db-data:/var/lib/postgres/data

  auth-db:
    image: postgres
    container_name: auth-db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: keycloakdb
    volumes:
      - auth-db-data:/var/lib/postgres/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    container_name: keycloak
    depends_on:
      - auth-db
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth-db:5432/keycloakdb
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    ports:
        - "8000:8080"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - observability

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - observability

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - observability
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin

volumes:
  auction-db-data:
  bid-db-data:
  notification-db-data:
  auth-db-data:
  rabbitmq-data:

networks:
  observability: