services:
  # banco de dados do leilão
  auction-db:
    image: postgres
    container_name: auction-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auctiondb
    restart: unless-stopped
    volumes:
      - auction-db-data:/var/lib/postgresql/data
    networks:
      - auction

  # banco de dados de lances
  bid-db:
    image: postgres
    container_name: bid-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: biddb
    restart: unless-stopped
    volumes:
      - bid-db-data:/var/lib/postgresql/data
    networks:
      - auction

  # banco de dados de notificações
  notification-db:
    image: postgres
    container_name: notification-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: notificationdb
    restart: unless-stopped
    volumes:
      - notification-db-data:/var/lib/postgresql/data
    networks:
      - auction

  # banco de dados do keycloak
  keycloak-db:
    image: postgres
    container_name: keycloak-db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: keycloakdb
    restart: unless-stopped
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - auction

  # keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    container_name: keycloak
    depends_on:
      - keycloak-db
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloakdb
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      # # Aponta para o arquivo dentro do diretório de importação padrão do Keycloak
      # KEYCLOAK_IMPORT: /opt/keycloak/data/import/keycloak-config.json
    command:
      - start-dev
    restart: unless-stopped
    ports:
      - "8000:8080"
    # volumes:
      # # Monta o arquivo local 'keycloak-config.json' no diretório de importação do Keycloak
      # - ./keycloak-config.json:/opt/keycloak/data/import/keycloak-config.json
    networks:
      - auction

  # fila de mensagens (RabbitMQ)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - auction

  # zipkin + elasticsearch para observabilidade
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    environment:
      STORAGE_TYPE: elasticsearch
      ES_HOSTS: http://zipkin-elasticsearch:9200
    depends_on:
      - zipkin-elasticsearch
    restart: unless-stopped
    ports:
      - "9411:9411"
    networks:
      - auction

  zipkin-elasticsearch:
    image: elasticsearch:7.17.18
    container_name: zipkin-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    restart: unless-stopped
    ports:
      - "9200:9200"
    volumes:
      - zipkin-es-data:/usr/share/elasticsearch/data
    networks:
      - auction

  # monitoramento
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/var/lib/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - auction

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - auction

volumes:
  auction-db-data:
  bid-db-data:
  notification-db-data:
  keycloak-db-data:
  rabbitmq-data:
  zipkin-es-data:
  prometheus_data:
  grafana_data:


networks:
  auction:
